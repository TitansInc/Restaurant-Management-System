/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package chef;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JPanel;

/**
 *
 * @author student
 */
public class ExternalOrderDetails extends javax.swing.JPanel {
    Connection con;
    Statement s,stmt;
    ResultSet r,rs;
    String sql;
    Order order;
    MainFrame mainFrame;
    JPanel orderDetailsPanel;
    
    String oTime,Ip,receiverName,memberId,phoneNo,address=null,orderNo,serviceType;
    /**
     * Creates new form ExternalOrderDetails
     */
    public ExternalOrderDetails(String orderNo,String oTime,String serviceType, MainFrame mainFrame, Order aThis, JPanel orderDetailsPanel,String Ip) {
        this.orderNo=orderNo;
        this.serviceType=serviceType;
        order=aThis;
        this.Ip=Ip;
        this.oTime=oTime;
        this.mainFrame=mainFrame;
        this.orderDetailsPanel=orderDetailsPanel;
        getConnection();
        getDetails();
        initComponents();
        itemsPanel.setLayout(new WrapLayout());        
        addItems();
    }
    private void getConnection() {
        try {
            try {
                Class.forName("com.mysql.jdbc.Driver");
            } catch (ClassNotFoundException ex) {
                System.out.println("Sorry, Driver Class is not found");
            }
            con=DriverManager.getConnection("jdbc:mysql://"+Ip+":3306/LosPollosHermanos","root","8154219449");
            stmt=con.createStatement();
            s=con.createStatement();
        } catch (SQLException ex) {
            System.out.println("Error in getting the Connection");
        }
    }
    private void addItems()
    {
        try {
            sql="select MName,Quantity from OrderDetails where OrderNo='"+orderNo+"';";
            rs=stmt.executeQuery(sql);
            String mealName;
            int qty;
            while(rs.next())
            {
                mealName=rs.getString("MName");
                qty=rs.getInt("Quantity");
                sql="select MImage from Meals where MName='"+mealName+"';";
                r=s.executeQuery(sql);
                r.next();
                itemsPanel.add(new ItemDetails(r.getString("MImage"), mealName,qty));
                r.next();
                itemsPanel.revalidate();
            }
        } catch (SQLException ex) {
            System.out.println("Error in adding items......\n"+ex.getCause());
            ex.printStackTrace();
            
        }
    }
    public void getDetails()
    {
        try {
            sql="select Receiver,CPhoneNo,DAddress from Delivery where OrderNo='"+orderNo+"';";
            rs=stmt.executeQuery(sql);
            if(rs.next()){
            receiverName=rs.getString("Receiver");
            phoneNo=rs.getString("CPhoneNo");
            address=rs.getString("DAddress");
           }
            sql="select MemberID,CookStatus from Orders where OrderNo='"+orderNo+"';";
            rs=stmt.executeQuery(sql);
            if(rs.next()){
            memberId=rs.getString("MemberID");
            }
            if(address==null)
            {address="Collect Myself";}
            
        } catch (SQLException ex) {
            System.out.println("Failed in getting delivery Details....");
            ex.printStackTrace();
        } 
                
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        deliveryDetailsPanel = new javax.swing.JPanel();
        orderNoLabel = new javax.swing.JLabel();
        memberIDLabel = new javax.swing.JLabel();
        receiverNameLabel = new javax.swing.JLabel();
        phoneNoLabel = new javax.swing.JLabel();
        addressLabel = new javax.swing.JLabel();
        orderTimeLabel = new javax.swing.JLabel();
        finishButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        itemsPanel = new javax.swing.JPanel();

        setBackground(new java.awt.Color(1, 1, 1));
        setForeground(new java.awt.Color(242, 238, 238));
        setPreferredSize(new java.awt.Dimension(402, 417));

        deliveryDetailsPanel.setBackground(new java.awt.Color(1, 1, 1));
        deliveryDetailsPanel.setForeground(new java.awt.Color(245, 243, 243));

        orderNoLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11)); // NOI18N
        orderNoLabel.setForeground(new java.awt.Color(238, 234, 234));
        orderNoLabel.setText("OrderNo : "+orderNo);

        memberIDLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11)); // NOI18N
        memberIDLabel.setForeground(new java.awt.Color(238, 234, 234));
        memberIDLabel.setText("MemberID : "+memberId);

        receiverNameLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11)); // NOI18N
        receiverNameLabel.setForeground(new java.awt.Color(238, 234, 234));
        receiverNameLabel.setText("Receiver : "+receiverName);

        phoneNoLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11)); // NOI18N
        phoneNoLabel.setForeground(new java.awt.Color(238, 234, 234));
        phoneNoLabel.setText("Phone : "+phoneNo);

        addressLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11)); // NOI18N
        addressLabel.setForeground(new java.awt.Color(238, 234, 234));
        addressLabel.setText("Address : "+address);

        orderTimeLabel.setFont(new java.awt.Font("DejaVu Sans", 1, 11)); // NOI18N
        orderTimeLabel.setForeground(new java.awt.Color(238, 234, 234));
        orderTimeLabel.setText("Order Time : "+oTime);

        finishButton.setFont(new java.awt.Font("DejaVu Sans", 1, 13)); // NOI18N
        finishButton.setText("Finished");
        finishButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                finishButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout deliveryDetailsPanelLayout = new javax.swing.GroupLayout(deliveryDetailsPanel);
        deliveryDetailsPanel.setLayout(deliveryDetailsPanelLayout);
        deliveryDetailsPanelLayout.setHorizontalGroup(
            deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(deliveryDetailsPanelLayout.createSequentialGroup()
                        .addGroup(deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(receiverNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 172, Short.MAX_VALUE)
                            .addComponent(orderNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(memberIDLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(phoneNoLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addComponent(addressLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(deliveryDetailsPanelLayout.createSequentialGroup()
                        .addComponent(orderTimeLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(deliveryDetailsPanelLayout.createSequentialGroup()
                .addGap(77, 77, 77)
                .addComponent(finishButton, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        deliveryDetailsPanelLayout.setVerticalGroup(
            deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(deliveryDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(orderNoLabel)
                    .addComponent(memberIDLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(deliveryDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(receiverNameLabel)
                    .addComponent(phoneNoLabel))
                .addGap(12, 12, 12)
                .addComponent(orderTimeLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addressLabel)
                .addGap(18, 18, 18)
                .addComponent(finishButton)
                .addContainerGap(32, Short.MAX_VALUE))
        );

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_NEVER);

        itemsPanel.setBackground(new java.awt.Color(1, 1, 1));

        javax.swing.GroupLayout itemsPanelLayout = new javax.swing.GroupLayout(itemsPanel);
        itemsPanel.setLayout(itemsPanelLayout);
        itemsPanelLayout.setHorizontalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 398, Short.MAX_VALUE)
        );
        itemsPanelLayout.setVerticalGroup(
            itemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );

        jScrollPane1.setViewportView(itemsPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(deliveryDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(deliveryDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void finishButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_finishButtonActionPerformed
        // TODO add your handling code here:
        sql="update Orders set CookStatus='finished' where OrderNo='"+orderNo+"';";
        
        try {
            stmt.executeUpdate(sql);
            sql="update Delivery set DTime=CURTIME() where OrderNo='"+orderNo+"';";
            stmt.executeUpdate(sql);
        } catch (SQLException ex) {
            System.out.println("Error in updating the database....");
            ex.printStackTrace();
        }
  
        mainFrame.updateOrders();
        orderDetailsPanel.removeAll();
        javax.swing.JPanel j=new javax.swing.JPanel();
        j.setBackground(Color.black);
        orderDetailsPanel.add(j);
        orderDetailsPanel.revalidate();
    }//GEN-LAST:event_finishButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addressLabel;
    private javax.swing.JPanel deliveryDetailsPanel;
    private javax.swing.JButton finishButton;
    private javax.swing.JPanel itemsPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel memberIDLabel;
    private javax.swing.JLabel orderNoLabel;
    private javax.swing.JLabel orderTimeLabel;
    private javax.swing.JLabel phoneNoLabel;
    private javax.swing.JLabel receiverNameLabel;
    // End of variables declaration//GEN-END:variables
}
